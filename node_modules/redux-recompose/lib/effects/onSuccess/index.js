"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _configuration = require("../../configuration");

// TODO: Add support and validations for multi target actions
function onSuccess() {
  var selector = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : function (action) {
    return action.payload;
  };
  return function (state, action) {
    var _newValues;

    var newValues = (_newValues = {}, (0, _defineProperty2["default"])(_newValues, "".concat(action.target, "Loading"), false), (0, _defineProperty2["default"])(_newValues, "".concat(action.target), selector(action, state)), (0, _defineProperty2["default"])(_newValues, "".concat(action.target, "Error"), null), _newValues);

    if (action.isPolling) {
      newValues["".concat(action.target, "IsRetrying")] = false;
      newValues["".concat(action.target, "RetryCount")] = 0;
    }

    return (0, _configuration.mergeState)(state, newValues);
  };
}

var _default = onSuccess;
exports["default"] = _default;