"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var yup = _interopRequireWildcard(require("yup"));

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2["default"])(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

var schema = yup.object().shape({
  description: yup.object().typeError('description should be an object'),
  targetCompleters: yup.array().of(yup.object().shape({
    targets: yup.array().of(yup.string()),
    completer: yup.mixed().test(function (value) {
      return typeof value === 'function';
    })
  }).typeError('targetCompleters should be an array of objects')).typeError('targetCompleters should be an array'),
  ignoredTargets: yup.object().typeError('ignoredTargets should be an object'),
  pollingTargets: yup.object().typeError('pollingTargets should be an object')
});

function customComplete(targetCompleters) {
  return targetCompleters.flatMap(function (_ref) {
    var completer = _ref.completer,
        targets = _ref.targets;
    return targets.map(completer);
  }).reduce(function (acc, value) {
    return _objectSpread(_objectSpread({}, acc), value);
  }, {});
}

function completeState(params) {
  schema.validateSync(params);
  var _params$description = params.description,
      description = _params$description === void 0 ? {} : _params$description,
      _params$targetComplet = params.targetCompleters,
      targetCompleters = _params$targetComplet === void 0 ? [] : _params$targetComplet,
      _params$ignoredTarget = params.ignoredTargets,
      ignoredTargets = _params$ignoredTarget === void 0 ? {} : _params$ignoredTarget,
      _params$pollingTarget = params.pollingTargets,
      pollingTargets = _params$pollingTarget === void 0 ? {} : _params$pollingTarget;
  var primaryState = customComplete([{
    targets: Object.keys(description),
    completer: function completer(key) {
      var _ref2;

      return _ref2 = {}, (0, _defineProperty2["default"])(_ref2, key, description[key]), (0, _defineProperty2["default"])(_ref2, "".concat(key, "Loading"), false), (0, _defineProperty2["default"])(_ref2, "".concat(key, "Error"), null), _ref2;
    }
  }]);
  var pollingState = customComplete([{
    targets: Object.keys(pollingTargets),
    completer: function completer(key) {
      var _ref3;

      return _ref3 = {}, (0, _defineProperty2["default"])(_ref3, key, pollingTargets[key]), (0, _defineProperty2["default"])(_ref3, "".concat(key, "Loading"), false), (0, _defineProperty2["default"])(_ref3, "".concat(key, "Error"), null), (0, _defineProperty2["default"])(_ref3, "".concat(key, "IsRetrying"), false), (0, _defineProperty2["default"])(_ref3, "".concat(key, "RetryCount"), 0), (0, _defineProperty2["default"])(_ref3, "".concat(key, "TimeoutID"), null), _ref3;
    }
  }]);
  var customCompleters = customComplete(targetCompleters);
  return _objectSpread(_objectSpread(_objectSpread(_objectSpread({}, primaryState), pollingState), customCompleters), ignoredTargets);
}

var _default = completeState;
exports["default"] = _default;